---
import { getCollection } from "astro:content";
import BaseHead from "../../../components/BaseHead.astro";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const allPosts = await getCollection("blog");

  const sortedPosts = allPosts
    .filter((post) => !post.data.draft) // Filter out drafts
    .sort(
      (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf()
    ); // Sort by pubDate descending

  // Use optional chaining and default value to avoid undefined tags
  const allTags = [
    ...new Set(sortedPosts.flatMap((post) => post.data.tags ?? [])),
  ];

  return allTags.flatMap((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      (post.data.tags ?? []).includes(tag)
    );
    return paginate(filteredPosts, {
      params: { tag },
      pageSize: 6,
    });
  });
}

interface BlogPostEntry {
  id: string;
  data: {
    title: string;
    description: string;
    heroImage: {
      src: string;
      alt: string;
    };
    draft: boolean;
    publishDate: string; // or Date if you prefer to parse it beforehand
    language: string;
    comment: boolean;
    tags: string[];
    tag: string;
  };
}

interface Props {
  page: {
    data: BlogPostEntry[];
    currentPage: number;
    url: {
      prev: string;
      next: string;
    };
  };
}

const { page } = Astro.props;
const { params } = Astro;
---

<html lang="en">
  <head>
    <BaseHead
      title={params.tag.toLowerCase().replace(/-/g, " ")}
      description={`Tag archive for ${params.tag.toLowerCase().replace(/-/g, " ")}`}
    />
  </head>

  <body class="dark:bg-black-900 dark:text-white-50">
    <Header />
    <main>
      <div class="grid-cols-12 grid text-balance" id="container">
        <ul>
          {
            page.data.map((blogPostEntry) => (
              <li>
                <a href={`/blog/${blogPostEntry.id}`}>
                  {blogPostEntry.data.title}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </main>
    <Footer />
  </body>
</html>
